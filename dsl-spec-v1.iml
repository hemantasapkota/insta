# Script Spec V1

# Command Structure:
# $() is an expression that is evaluated
# $( $( $() ) ) supports nested expression
# $(cmd... => i ) expression before => is evaluated. Result assigned to i
# $(cmd... ==> arr) expression before ==> is evaluated. Result appended to arr

# Nested command should be wrapped in quotes. Exception for array indices.
#   Example:    $(download url="$(`url`)")
#   Exception:  $(filter var=result query=entry_data.TagPage[0].tag.media.nodes[$(`i`)].display_src => url)
#
# Nested command works with multiple siblings. Ex:
#   $(query query_id="17851374694183129" variables={"id":"$(`userId`)","first":$(`followersCount`)} => followers)
#
# Control Commands:
#   counter: Creates a counter
#
#   If
#     Every command can include an optional if condition which determines if that command gets executed or not
#     Ex: $(unfollow id="$(`followingID`)" if="$(`fullName`)_contains_Tamang")
#     Currently supported IF conditions: $(var1)_contains_$(var2)
#
#   Loops
#     loop: Starts loop node. Batch all further commands until pool is encountered.
#     pool: End batch collection. Process all the items.
#     Example:
#       $(loop range=0,9 => i)
#           $(filter var=result query=entry_data.TagPage[0].tag.media.nodes[$(`i`)].display_src => url)
#           $(download url="$(`url`)")
#       $(pool)
#
#      Nested loop not supported yet.

# Shorthands
# $(`i`) is rewritten as $(filter var=i)
# $(`#i`) returns the length if "i" is an array

# $(delay) can be used to control the timing of an operation. Interval in seconds. Examples:
#   $(delay interval=5)
#   $(unfollow id="$(`followingID`)" d="$(delay interval=2")

# run_script
# Scripts can by dynamically loaded during execution
# ex: run_script file=<<scriptfile.iml>> lineFrom=0 lineTo=10

# Recursive run_script
# A recursive run_script is a script that invokes itself at some point during the execution.
# In combination with the IF block, this construct can be used for creating looping behaviour.
# See examples/recursiveAppend.iml

#> profile bot
#   Specifies the profile. Profile defines bot behaviour.
#   Status: TODO
